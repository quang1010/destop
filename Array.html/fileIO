
using System;
using System.Diagnostics.CodeAnalysis;
using System.IO;
using System.Security.Cryptography.X509Certificates;
using System.Threading;

namespace Baitap1
{
    class Program
    {
        static void Main(string[] args)
        {
            string path = @"D:\C#\Baitap1\Baitap1";

            string fileName = "inputData.txt";

            



            Directory.CreateDirectory(path);
            int[,] matrix;
            int row = 0, col = 0;
            using (StreamReader sr = File.OpenText($@"{path}\{fileName}"))
            {
                string line = sr.ReadLine();
                string[] rowcol = line.Split(" ");
                row = int.Parse(rowcol[0]);
                col = int.Parse(rowcol[1]);
                matrix = new int[row, col];
                int i = 0;
                while ((line = sr.ReadLine()) != null)
                {
                    string[] rows = line.Split(" ");

                    for (int j = 0; j < rows.Length; j++)
                    {
                        matrix[i, j] = int.Parse(rows[j]);
                    }
                    i++;


                }


            }

            string outfile = "OutputData.txt";
            using (StreamWriter sw = File.CreateText(($@"{path}\{outfile}")))
            {
                int sum = 0;
                int count = 0;
                int counts = 0;
                int tongBien = 0;
                for (int i = 0; i < row; i++)
                {
                    for (int j = 0; j < col; j++)
                    {
                        if (i == 0 || j == 0 || i == row - 1 || j == col - 1)
                            tongBien += matrix[i, j];
                        sum += matrix[i, j];
                        if (kt(matrix[i, j]) == 1)
                            count += 1;
                        if (a(matrix[i, j]) == 1)
                            counts += 1; 
                      
                        
                    }
                    
                }
                for (int i = 0; i < row; i++)
                {
                    for (int j = 0; j < col; j++)
                    {
                        sw.Write($"{matrix[i, j] * 2} ");
                    }
                    sw.WriteLine();
                }
                static int kt(int a)
                {
                    int c = 1;
                    if (a < 2)
                        return c=-1;
                    else
                    {
                        for(int i = 2; i <= a / 2; i++)
                        {
                            if (a % i == 0)
                                return c = -1;

                        }
                    }
                    return c;
                }
                static int a(int a)
                {
                    int b = 1;

                    if (a % 2 != 0)
                        return b = -1;
                    return b;
                        
                    
                }




                sw.WriteLine($"tong la:{sum}");
                sw.WriteLine($"tong snt la:{count}");
                sw.WriteLine($"tong snt le:{counts}");
                sw.WriteLine($"tong bien la:{tongBien}");




            }
            


        }
